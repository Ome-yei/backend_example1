{"version":3,"sources":["services/notes.js","components/Note.js","components/PopUpMessage.js","components/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","Note","note","toggleImportance","label","important","className","content","onClick","PopUpMessage","message","timeOut","Footer","style","color","fontStyle","fontSize","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","errorMessage","setErrorMessage","useEffect","console","log","noteService","initialNotes","length","notesToShow","filter","setTimeout","map","find","n","changeNote","returnedNote","onSubmit","event","preventDefault","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","target","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a0a897eb.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = '/api/notes'\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {\r\n    getAll,\r\n    create,\r\n    update\r\n}","import React from \"react\";\r\nimport './Notes.css';\r\n\r\nexport default function Note({ note, toggleImportance }) {\r\n  const label = note.important\r\n    ? 'Not important' : 'Important'\r\n    \r\n  return(\r\n    <li className=\"note\">\r\n      {note.content}\r\n      <button onClick={toggleImportance}>{label}</button>\r\n    </li>\r\n  ) \r\n}\r\n","import React from \"react\";\r\n\r\nexport default function PopUpMessage({message, timeOut}){\r\n\r\n\r\n    if(message === null){\r\n        return null\r\n    }\r\n\r\n    return(\r\n        <div className=\"error\"> \r\n            {timeOut()}\r\n            {message}\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function Footer() {\r\n\r\n    const footerStyle = {\r\n        color: 'green',\r\n        fontStyle: 'italic',\r\n        fontSize: 16\r\n    }\r\n\r\n    return (\r\n        <div style={footerStyle}>\r\n            <br />\r\n            <em>Note app, Department of Computer Science, University of Helsinki 2021</em>\r\n        </div>\r\n    )\r\n}","import React, { useEffect, useState } from \"react\";\nimport \"./App.css\";\n\nimport noteService from './services/notes'\nimport Note from \"./components/Note\";\nimport PopUpMessage from \"./components/PopUpMessage\";\nimport Footer from \"./components/Footer\";\n\nexport default function App() {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n  const [errorMessage, setErrorMessage] = useState('some error message...')\n\n  useEffect(() => {\n    console.log('effect');\n    noteService\n      .getAll()\n      .then(initialNotes => {\n        setNotes(initialNotes)\n      })\n  }, [])\n  console.log('render', notes.length, 'notes')\n\n  const addNote = (event) => {\n    event.preventDefault();\n    // Create the new note object\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() < 0.5,\n    };\n\n    noteService\n      .create(noteObject)\n      .then(returnedNote => {\n        setNotes(notes.concat(returnedNote))\n        setNewNote(\"\");\n      })\n  };\n\n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value);\n  };\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter((note) => note.important === true);\n\n\n  const toggleImportance = (id) => {\n    const note = notes.find(n => n.id === id);\n    const changeNote = {...note, important: !note.important}\n\n    noteService\n      .update(id, changeNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n  }\n\n  const timeOut = () => {\n    setTimeout(() => {\n        setErrorMessage(null)\n      }, 5000)\n}\n  return (\n    <div className=\"App\">\n      <h1>Notes</h1>\n      <PopUpMessage message={errorMessage} timeOut={timeOut}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          {showAll ? \"Important\" : \"All\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note key={note.id} note={note} toggleImportance={() => toggleImportance(note.id)} />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button>Submit</button>\n      </form>\n      <Footer />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}